
import OpenAI from 'openai';
import { OPENAI_API_KEY } from '../../config/constants';

// Initialize and export OpenAI client
export const initializeOpenAI = () => {
  // Enhanced API key validation
  if (!OPENAI_API_KEY || OPENAI_API_KEY.trim() === '') {
    throw new Error('OpenAI API key is missing or empty. Please check your environment variables.');
  }

  return new OpenAI({
    apiKey: OPENAI_API_KEY,
    dangerouslyAllowBrowser: true  // Required for client-side usage
  });
};

// Function to generate content using OpenAI
export const generateAIContent = async (
  systemPrompt: string, 
  userPrompt: string,
  options = { temperature: 0.7, maxTokens: 1500 }
): Promise<string> => {
  try {
    console.log('Initializing OpenAI client');
    const openai = initializeOpenAI();
    
    console.log('Calling OpenAI API with system prompt and user prompt');
    
    // Improved API call with better configuration
    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini", // Using the recommended mini model for faster generation
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userPrompt }
      ],
      temperature: options.temperature,
      max_tokens: options.maxTokens
    });

    console.log('OpenAI Response received:', response.choices[0]?.finish_reason);

    // Extract and validate generated text
    const generatedText = response.choices[0]?.message?.content?.trim();
    
    if (!generatedText) {
      throw new Error('No content was generated by the AI. Please try again.');
    }
    
    console.log('Generated text length:', generatedText.length);
    
    return generatedText;
  } catch (error) {
    console.error('Error generating AI content:', error);
    
    // More informative error handling with specific error types
    if (error instanceof OpenAI.APIError) {
      console.error('OpenAI API Error details:', error.status, error.message);
      
      if (error.status === 401) {
        throw new Error(`Authentication error: Invalid API key. Please check your OpenAI API key.`);
      } else if (error.status === 429) {
        throw new Error(`Rate limit exceeded: ${error.message}. Please try again in a few moments.`);
      } else if (error.status === 500) {
        throw new Error(`OpenAI server error: ${error.message}. Please try again later.`);
      } else {
        throw new Error(`OpenAI API Error (${error.status}): ${error.message}`);
      }
    }
    
    throw new Error(`Failed to generate content: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
};
